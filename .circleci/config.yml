# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:8-browsers

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # run tests!
      - run: yarn circleci

  publish-docker:
    docker:
      - image: google/cloud-sdk
    steps:
      - run: &setup_gcloud
          name: Setup gcloud
          command: |
            echo ${GCP_SERVICE_ACCOUNT_KEY} | base64 -d > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project nyc-tlc-1225
      - checkout
      - setup_remote_docker
      - run:
          name: Choose a tag
          command: git rev-parse --short=8 HEAD > /tmp/tag
      - run:
          name: Build image
          command: docker build . -t us.gcr.io/nyc-tlc-1225/totx-web:$(cat /tmp/tag)
      - run:
          name: Push image
          command: gcloud docker -- push us.gcr.io/nyc-tlc-1225/totx-web:$(cat /tmp/tag)
      - run:
          name: Create K8s configs
          command: |
            mkdir /tmp/k8s
            kubectl patch --local -o yaml -p \ '
            {
                "spec": {
                    "template": {
                        "spec": {
                          "containers": [
                                {
                                    "name": "totx-web",
                                    "image": "us.gcr.io/nyc-tlc-1225/totx-web:'$(cat /tmp/tag)'"
                                }
                            ]
                        }
                    }
                }
            }' -f ./packages/transit/deploy/deployment-template.yaml > /tmp/k8s/totx-deployment.yaml

      - persist_to_workspace:
          root: /tmp
          paths:
            - k8s
  deploy-staging:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          <<: *setup_gcloud
      - run:
          name: Apply K8s configs
          command: |
            gcloud container clusters get-credentials staging --zone=us-east1-b
            kubectl apply -f /tmp/k8s/*yaml
  deploy-production:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          <<: *setup_gcloud
      - run:
          name: Apply K8s configs
          command: |
            gcloud container clusters get-credentials prod --zone=us-east1-b
            kubectl apply -f /tmp/k8s/*yaml


workflows:
  version: 2
  build-and-publish:
    jobs:
      - build
      - publish-docker:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - publish-docker
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - deploy-staging
      - deploy-production:
          requires:
            - hold
